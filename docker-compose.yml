version: '3.9'
services:
  mongo:
    image: mongo
    hostname: mongo
    restart: unless-stopped
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./channel-svc/src/config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo:/data/db
    networks:
      - rabbitmq_nodejs
    
  mongo-seed:
    build: ./mongo-seed
    depends_on:
      - mongo
    networks:
      - rabbitmq_nodejs
  
  rabbitmq:
    #image: rabbitmq:3.10-rc-management-alpine
    build: ./rabbitmq
    hostname: rabbitmq
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - rabbitmq_nodejs

  agent-svc:
    image: node:16
    command: 'npm run dev'
    restart: unless-stopped
    working_dir: /usr/src/app
    ports:
      - ${AGENT_SVC_PORT}:3003
    volumes:
      - ./agent-svc:/usr/src/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_nodejs
  
  channel-svc:
    image: node:16
    command: 'npm run dev'
    restart: unless-stopped
    working_dir: /usr/src/app
    ports:
      - ${CHANNEL_SVC_PORT}:3004
    volumes:
      - ./channel-svc:/usr/src/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_nodejs

volumes:
  mongo:

networks:
  rabbitmq_nodejs:
    driver: bridge
